; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\hal_spi_flash.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\hal_spi_flash.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Libraries\CMSIS\CM3\CoreSupport -I.\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I.\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I.\Libraries\STM32F10x_StdPeriph_Driver\inc -I.\main -I.\FreeRTOS\include -I.\FreeRTOS\portable\RVDS\ARM_CM3 -I.\User -I.\User\include -I.\fatfs -I.\Utilities\STM32_EVAL -I.\Utilities\STM32_EVAL\Common -I.\Utilities\STM32_EVAL\STM3210E_EVAL -I.\User\SPI_FLASH -I.\User\hal -I.\RTE\_Target_1 -I"D:\program files (x86)\keil5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -I"D:\program files (x86)\keil5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_STM3210E_EVAL --omf_browse=.\objects\hal_spi_flash.crf User\hal\hal_spi_flash.c]
                          THUMB

                          AREA ||i.hal_flash_EraseSector||, CODE, READONLY, ALIGN=1

                  hal_flash_EraseSector PROC
;;;5      //SectorAddr必须为4K的整数倍，不然这个函数有问题
;;;6      void hal_flash_EraseSector(uint32_t SectorAddr,uint16_t SectorCnt)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;7      {
000004  4605              MOV      r5,r0
000006  460e              MOV      r6,r1
;;;8      	uint16_t i;
;;;9      	uint32_t current_SectorAddr = 0;
000008  2700              MOVS     r7,#0
;;;10     	
;;;11     	//最大6M
;;;12     	if(SectorAddr >= 0x600000)
00000a  f5b50fc0          CMP      r5,#0x600000
00000e  d301              BCC      |L1.20|
                  |L1.16|
;;;13     	{
;;;14     		return;
;;;15     	}
;;;16     
;;;17     	for(i=0;i<SectorCnt;i++)
;;;18     	{
;;;19     		current_SectorAddr = SectorAddr + i*sFLASH_SPI_SECTORSIZE;
;;;20     		sFLASH_EraseSector(current_SectorAddr);
;;;21     	}
;;;22     }
000010  e8bd81f0          POP      {r4-r8,pc}
                  |L1.20|
000014  2400              MOVS     r4,#0                 ;17
000016  e006              B        |L1.38|
                  |L1.24|
000018  eb053704          ADD      r7,r5,r4,LSL #12      ;19
00001c  4638              MOV      r0,r7                 ;20
00001e  f7fffffe          BL       sFLASH_EraseSector
000022  1c60              ADDS     r0,r4,#1              ;17
000024  b284              UXTH     r4,r0                 ;17
                  |L1.38|
000026  42b4              CMP      r4,r6                 ;17
000028  dbf6              BLT      |L1.24|
00002a  bf00              NOP      
00002c  e7f0              B        |L1.16|
;;;23     
                          ENDP


                          AREA ||i.hal_flash_readbuffer||, CODE, READONLY, ALIGN=1

                  hal_flash_readbuffer PROC
;;;32     
;;;33     void hal_flash_readbuffer(uint8_t* pBuffer, uint32_t WriteAddr, uint16_t NumByteToWrite)
000000  b570              PUSH     {r4-r6,lr}
;;;34     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
000006  4616              MOV      r6,r2
;;;35     	sFLASH_ReadBuffer(pBuffer,WriteAddr,NumByteToWrite);
000008  4632              MOV      r2,r6
00000a  4629              MOV      r1,r5
00000c  4620              MOV      r0,r4
00000e  f7fffffe          BL       sFLASH_ReadBuffer
;;;36     }
000012  bd70              POP      {r4-r6,pc}
;;;37     
                          ENDP


                          AREA ||i.hal_flash_writebuffer||, CODE, READONLY, ALIGN=1

                  hal_flash_writebuffer PROC
;;;24     
;;;25     void hal_flash_writebuffer(uint8_t* pBuffer, uint32_t WriteAddr, uint16_t NumByteToWrite)
000000  b570              PUSH     {r4-r6,lr}
;;;26     {
000002  4605              MOV      r5,r0
000004  460c              MOV      r4,r1
000006  4616              MOV      r6,r2
;;;27     	hal_flash_EraseSector(WriteAddr,10);
000008  210a              MOVS     r1,#0xa
00000a  4620              MOV      r0,r4
00000c  f7fffffe          BL       hal_flash_EraseSector
;;;28     	
;;;29     	sFLASH_WriteBuffer(pBuffer,WriteAddr,NumByteToWrite);
000010  4632              MOV      r2,r6
000012  4621              MOV      r1,r4
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       sFLASH_WriteBuffer
;;;30     }
00001a  bd70              POP      {r4-r6,pc}
;;;31     
                          ENDP

