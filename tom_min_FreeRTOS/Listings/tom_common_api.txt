; generated by Component: ARM Compiler 5.06 update 4 (build 422) Tool: ArmCC [4d3604]
; commandline ArmCC [--list --split_sections --debug -c --asm --interleave -o.\objects\tom_common_api.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\tom_common_api.d --cpu=Cortex-M3 --apcs=interwork -O0 --diag_suppress=9931 -I.\Libraries\CMSIS\CM3\CoreSupport -I.\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x -I.\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\startup\arm -I.\Libraries\STM32F10x_StdPeriph_Driver\inc -I.\main -I.\FreeRTOS\include -I.\FreeRTOS\portable\RVDS\ARM_CM3 -I.\User -I.\User\include -I.\fatfs -I.\Utilities\STM32_EVAL -I.\Utilities\STM32_EVAL\Common -I.\Utilities\STM32_EVAL\STM3210E_EVAL -I.\User\SPI_FLASH -I.\User\hal -I.\RTE\_Target_1 -I"D:\program files (x86)\keil5\ARM\PACK\Keil\STM32F1xx_DFP\2.3.0\Device\Include" -I"D:\program files (x86)\keil5\ARM\CMSIS\Include" -D__MICROLIB -D__UVISION_VERSION=523 -DSTM32F10X_HD -DSTM32F10X_HD -DUSE_STDPERIPH_DRIVER -DUSE_STM3210E_EVAL --omf_browse=.\objects\tom_common_api.crf User\source\Tom_Common_Api.c]
                          THUMB

                          AREA ||i.get_task_info||, CODE, READONLY, ALIGN=2

                          REQUIRE _printf_percent
                          REQUIRE _printf_s
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_str
                          REQUIRE _printf_sizespec
                          REQUIRE _printf_d
                          REQUIRE _printf_int_dec
                  get_task_info PROC
;;;4      
;;;5      void get_task_info(TaskHandle_t task)
000000  e92d41f0          PUSH     {r4-r8,lr}
;;;6      {
000004  4606              MOV      r6,r0
;;;7      		eTaskState task_status;
;;;8      		char *task_name;
;;;9      		UBaseType_t stack_size;
;;;10     		
;;;11     		task_name = pcTaskGetTaskName(task);
000006  4630              MOV      r0,r6
000008  f7fffffe          BL       pcTaskGetName
00000c  4607              MOV      r7,r0
;;;12     		task_status = eTaskGetState(task);
00000e  4630              MOV      r0,r6
000010  f7fffffe          BL       eTaskGetState
000014  4604              MOV      r4,r0
;;;13     		printf("current_task name: %s\r\n",task_name);
000016  4639              MOV      r1,r7
000018  a01a              ADR      r0,|L1.132|
00001a  f7fffffe          BL       __2printf
;;;14     		//printf("current_task status: %d\r\n",task_status);
;;;15     		if(task_status == 0)
00001e  b924              CBNZ     r4,|L1.42|
;;;16     		{
;;;17     				printf("%s task_status : eRunning\r\n",task_name);
000020  4639              MOV      r1,r7
000022  a01e              ADR      r0,|L1.156|
000024  f7fffffe          BL       __2printf
000028  e021              B        |L1.110|
                  |L1.42|
;;;18     		}	
;;;19     		else if(task_status == 1)
00002a  2c01              CMP      r4,#1
00002c  d104              BNE      |L1.56|
;;;20     		{
;;;21     				printf("%s task_status : eReady\r\n",task_name);
00002e  4639              MOV      r1,r7
000030  a021              ADR      r0,|L1.184|
000032  f7fffffe          BL       __2printf
000036  e01a              B        |L1.110|
                  |L1.56|
;;;22     		}
;;;23     		else if(task_status == 2)
000038  2c02              CMP      r4,#2
00003a  d104              BNE      |L1.70|
;;;24     		{
;;;25     				printf("%s task_status : eBlocked\r\n",task_name);
00003c  4639              MOV      r1,r7
00003e  a025              ADR      r0,|L1.212|
000040  f7fffffe          BL       __2printf
000044  e013              B        |L1.110|
                  |L1.70|
;;;26     		}
;;;27     		else if(task_status == 3)
000046  2c03              CMP      r4,#3
000048  d104              BNE      |L1.84|
;;;28     		{
;;;29     				printf("%s task_status : eSuspended\r\n",task_name);
00004a  4639              MOV      r1,r7
00004c  a028              ADR      r0,|L1.240|
00004e  f7fffffe          BL       __2printf
000052  e00c              B        |L1.110|
                  |L1.84|
;;;30     		}
;;;31     		else if(task_status == 4)
000054  2c04              CMP      r4,#4
000056  d104              BNE      |L1.98|
;;;32     		{	
;;;33     				printf("%s task_status : eDeleted\r\n",task_name);
000058  4639              MOV      r1,r7
00005a  a02d              ADR      r0,|L1.272|
00005c  f7fffffe          BL       __2printf
000060  e005              B        |L1.110|
                  |L1.98|
;;;34     		}
;;;35     		else if(task_status == 5)
000062  2c05              CMP      r4,#5
000064  d103              BNE      |L1.110|
;;;36     		{
;;;37     				printf("%s task_status : eInvalid\r\n",task_name);
000066  4639              MOV      r1,r7
000068  a030              ADR      r0,|L1.300|
00006a  f7fffffe          BL       __2printf
                  |L1.110|
;;;38     		}
;;;39     		
;;;40     		stack_size = uxTaskGetStackHighWaterMark(task);
00006e  4630              MOV      r0,r6
000070  f7fffffe          BL       uxTaskGetStackHighWaterMark
000074  4605              MOV      r5,r0
;;;41     		printf("Remaining stack space : %ld\r\n",stack_size*4);
000076  00a9              LSLS     r1,r5,#2
000078  a033              ADR      r0,|L1.328|
00007a  f7fffffe          BL       __2printf
;;;42     		
;;;43     }
00007e  e8bd81f0          POP      {r4-r8,pc}
                          ENDP

000082  0000              DCW      0x0000
                  |L1.132|
000084  63757272          DCB      "current_task name: %s\r\n",0
000088  656e745f
00008c  7461736b
000090  206e616d
000094  653a2025
000098  730d0a00
                  |L1.156|
00009c  25732074          DCB      "%s task_status : eRunning\r\n",0
0000a0  61736b5f
0000a4  73746174
0000a8  7573203a
0000ac  20655275
0000b0  6e6e696e
0000b4  670d0a00
                  |L1.184|
0000b8  25732074          DCB      "%s task_status : eReady\r\n",0
0000bc  61736b5f
0000c0  73746174
0000c4  7573203a
0000c8  20655265
0000cc  6164790d
0000d0  0a00    
0000d2  00                DCB      0
0000d3  00                DCB      0
                  |L1.212|
0000d4  25732074          DCB      "%s task_status : eBlocked\r\n",0
0000d8  61736b5f
0000dc  73746174
0000e0  7573203a
0000e4  2065426c
0000e8  6f636b65
0000ec  640d0a00
                  |L1.240|
0000f0  25732074          DCB      "%s task_status : eSuspended\r\n",0
0000f4  61736b5f
0000f8  73746174
0000fc  7573203a
000100  20655375
000104  7370656e
000108  6465640d
00010c  0a00    
00010e  00                DCB      0
00010f  00                DCB      0
                  |L1.272|
000110  25732074          DCB      "%s task_status : eDeleted\r\n",0
000114  61736b5f
000118  73746174
00011c  7573203a
000120  20654465
000124  6c657465
000128  640d0a00
                  |L1.300|
00012c  25732074          DCB      "%s task_status : eInvalid\r\n",0
000130  61736b5f
000134  73746174
000138  7573203a
00013c  2065496e
000140  76616c69
000144  640d0a00
                  |L1.328|
000148  52656d61          DCB      "Remaining stack space : %ld\r\n",0
00014c  696e696e
000150  67207374
000154  61636b20
000158  73706163
00015c  65203a20
000160  256c640d
000164  0a00    
000166  00                DCB      0
000167  00                DCB      0
